Found 80 hdf5 files


Data from: ['/home/robot/Dataset_and_Checkpoint/dataset/zip_tie_random']
- Train on [79] episodes
- Test on [1] episodes


Found 80 hdf5 files
Norm stats from: ['/home/robot/Dataset_and_Checkpoint/dataset/zip_tie_random']
Initializing transformations
Initializing transformations
Augment images: False, train_num_workers: 2, val_num_workers: 2
/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Use VQ: False, None, None
number of parameters: 117.43M
KL Weight 10
  0%|                                                                                                                                                                  | 0/100001 [00:01<?, ?it/s]
Validating
cam_name is cam_high
img.shape is torch.Size([4, 3, 480, 640])
img_processed.shape is torch.Size([4, 3, 480, 640])
cam_name is cam_left_wrist
img.shape is torch.Size([4, 3, 480, 640])
img_processed.shape is torch.Size([4, 8, 30, 40])
cam_name is cam_right_wrist
img.shape is torch.Size([4, 3, 480, 640])
img_processed.shape is torch.Size([4, 8, 30, 40])
cam_name is gel
img.shape is torch.Size([4, 3, 480, 640])
img_processed.shape is torch.Size([4, 3, 480, 640])
Traceback (most recent call last):
  File "imitate_episodes_multi_gpu.py", line 904, in <module>
    main(vars(parser.parse_args()))
  File "imitate_episodes_multi_gpu.py", line 233, in main
    best_ckpt_info = train_bc(train_dataloader, val_dataloader, config, policy)
  File "imitate_episodes_multi_gpu.py", line 797, in train_bc
    forward_dict = forward_pass(data, policy)
  File "imitate_episodes_multi_gpu.py", line 744, in forward_pass
    return policy(qpos_data, image_data, action_data, is_pad) # TODO remove None
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/policy.py", line 300, in __call__
    image_processed = torch.cat(processed_imgs, dim=1)
RuntimeError: Sizes of tensors must match except in dimension 1. Expected size 3 but got size 8 for tensor number 1 in the list.
Traceback (most recent call last):
  File "imitate_episodes_multi_gpu.py", line 904, in <module>
    main(vars(parser.parse_args()))
  File "imitate_episodes_multi_gpu.py", line 233, in main
    best_ckpt_info = train_bc(train_dataloader, val_dataloader, config, policy)
  File "imitate_episodes_multi_gpu.py", line 797, in train_bc
    forward_dict = forward_pass(data, policy)
  File "imitate_episodes_multi_gpu.py", line 744, in forward_pass
    return policy(qpos_data, image_data, action_data, is_pad) # TODO remove None
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/policy.py", line 300, in __call__
    image_processed = torch.cat(processed_imgs, dim=1)
RuntimeError: Sizes of tensors must match except in dimension 1. Expected size 3 but got size 8 for tensor number 1 in the list.

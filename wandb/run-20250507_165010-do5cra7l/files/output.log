Found 80 hdf5 files


Data from: ['/home/robot/Dataset_and_Checkpoint/dataset/zip_tie_random']
- Train on [79] episodes
- Test on [1] episodes


Found 80 hdf5 files
Norm stats from: ['/home/robot/Dataset_and_Checkpoint/dataset/zip_tie_random']
Initializing transformations
Initializing transformations
Augment images: False, train_num_workers: 2, val_num_workers: 2
/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
resnet for tactile info.
Use VQ: False, None, None
******************************************************************************************************************************************************
number of parameters: 117.43M
KL Weight 10
  0%|                                                                                                                                                                  | 0/100001 [00:00<?, ?it/s]
Validating
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
Validation loss: 103.49428
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
features.shape torch.Size([4, 512, 15, 20])
Traceback (most recent call last):
  File "imitate_episodes_multi_gpu.py", line 904, in <module>
    main(vars(parser.parse_args()))
  File "imitate_episodes_multi_gpu.py", line 233, in main
    best_ckpt_info = train_bc(train_dataloader, val_dataloader, config, policy)
  File "imitate_episodes_multi_gpu.py", line 826, in train_bc
    forward_dict = forward_pass(data, policy)
  File "imitate_episodes_multi_gpu.py", line 744, in forward_pass
    return policy(qpos_data, image_data, action_data, is_pad) # TODO remove None
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/policy.py", line 368, in __call__
    a_hat, is_pad_hat, (mu, logvar), probs, binaries = self.model(qpos, image, env_state, actions, is_pad, vq_sample)
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/detr_vae.py", line 183, in forward
    hs = self.transformer(src, None, self.query_embed.weight, pos, latent_input, proprio_input, self.additional_pos_embed.weight)[0]
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/transformer.py", line 74, in forward
    hs = self.decoder(tgt, memory, memory_key_padding_mask=mask,
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/transformer.py", line 124, in forward
    output = layer(output, memory, tgt_mask=tgt_mask,
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/transformer.py", line 285, in forward
    return self.forward_post(tgt, memory, tgt_mask, memory_mask,
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/transformer.py", line 241, in forward_post
    tgt2 = self.multihead_attn(query=self.with_pos_embed(tgt, query_pos),
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/activation.py", line 1205, in forward
    attn_output, attn_output_weights = F.multi_head_attention_forward(
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/functional.py", line 5341, in multi_head_attention_forward
    attn_output_weights = dropout(attn_output_weights, p=dropout_p)
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/functional.py", line 1252, in dropout
    return _VF.dropout_(input, p, training) if inplace else _VF.dropout(input, p, training)
KeyboardInterrupt
Traceback (most recent call last):
  File "imitate_episodes_multi_gpu.py", line 904, in <module>
    main(vars(parser.parse_args()))
  File "imitate_episodes_multi_gpu.py", line 233, in main
    best_ckpt_info = train_bc(train_dataloader, val_dataloader, config, policy)
  File "imitate_episodes_multi_gpu.py", line 826, in train_bc
    forward_dict = forward_pass(data, policy)
  File "imitate_episodes_multi_gpu.py", line 744, in forward_pass
    return policy(qpos_data, image_data, action_data, is_pad) # TODO remove None
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/policy.py", line 368, in __call__
    a_hat, is_pad_hat, (mu, logvar), probs, binaries = self.model(qpos, image, env_state, actions, is_pad, vq_sample)
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/detr_vae.py", line 183, in forward
    hs = self.transformer(src, None, self.query_embed.weight, pos, latent_input, proprio_input, self.additional_pos_embed.weight)[0]
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/transformer.py", line 74, in forward
    hs = self.decoder(tgt, memory, memory_key_padding_mask=mask,
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/transformer.py", line 124, in forward
    output = layer(output, memory, tgt_mask=tgt_mask,
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/transformer.py", line 285, in forward
    return self.forward_post(tgt, memory, tgt_mask, memory_mask,
  File "/home/robot/Programs_Codes/aloha_related/act-triple-plus/detr/models/transformer.py", line 241, in forward_post
    tgt2 = self.multihead_attn(query=self.with_pos_embed(tgt, query_pos),
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/modules/activation.py", line 1205, in forward
    attn_output, attn_output_weights = F.multi_head_attention_forward(
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/functional.py", line 5341, in multi_head_attention_forward
    attn_output_weights = dropout(attn_output_weights, p=dropout_p)
  File "/home/ubuntu20/miniforge3/envs/aloha/lib/python3.8/site-packages/torch/nn/functional.py", line 1252, in dropout
    return _VF.dropout_(input, p, training) if inplace else _VF.dropout(input, p, training)
KeyboardInterrupt
